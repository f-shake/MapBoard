<Window x:Class="MapBoard.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MapBoard.UI"
        xmlns:flatstyle="clr-namespace:FzLib.Control.FlatStyle;assembly=FzWpfControlLib"
        xmlns:win10style="clr-namespace:FzLib.Control.Win10Style;assembly=FzWpfControlLib"
        xmlns:progress="clr-namespace:FzLib.Control.Progress;assembly=FzWpfControlLib"
        xmlns:picker="clr-namespace:FzLib.Control.Picker;assembly=FzWpfControlLib"
        xmlns:bar="clr-namespace:MapBoard.UI.OperationBar"
        xmlns:splitbutton="clr-namespace:MapBoard.UI.SplitButton"
        xmlns:stylesettingpanel="clr-namespace:MapBoard.UI.Panel"
        mc:Ignorable="d"
        Closing="WindowClosing"
        WindowStartupLocation="CenterScreen"
        Loaded="WindowLoaded"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="地图画板" Height="700" Width="1000">
    <Window.Resources>
        <ResourceDictionary Source="Styles.xaml"/>
    </Window.Resources>


    <Grid x:Name="grdMain">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <local:ArcMapView x:Name="arcMap" Grid.Column="1" />
        <bar:EditOperationBar x:Name="editBar" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <bar:EditOperationBar.RenderTransform>
                <TranslateTransform Y="-24"/>
            </bar:EditOperationBar.RenderTransform>
        </bar:EditOperationBar>
        <bar:SelectOperationBar x:Name="selectBar" Grid.Column="1" HorizontalAlignment="Stretch" VerticalAlignment="Top">
            <bar:SelectOperationBar.RenderTransform>
                <TranslateTransform Y="-24"/>
            </bar:SelectOperationBar.RenderTransform>
        </bar:SelectOperationBar>

        <win10style:ModernExpander MaxWidth="240" Grid.Column="2" Header="设&#x000D;置" IsExpanded="False" ExpandDirection="Left">
            <stylesettingpanel:SettingPanel/>
        </win10style:ModernExpander>


        <win10style:ModernExpander  Header="工&#x000D;具" IsExpanded="True" ExpandDirection="Right">


            <Grid x:Name="grdLeft">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="16"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="8"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="16"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="16"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <StackPanel>

                    <stylesettingpanel:StyleSettingPanel x:Name="styleSetting"/>
                    <TextBlock/>

                    <StackPanel Grid.Row="100" Grid.ColumnSpan="100" HorizontalAlignment="Right"  Orientation="Horizontal">
                        <flatstyle:Button x:Name="btnBrowseMode" Content="浏览模式" Click="BrowseModeButtonClick"/>
                        <TextBlock Text="  "/>
                        <flatstyle:Button x:Name="btnApplyStyle"  Content="应用样式" Click="ApplyStyleButtonClick" />
                        <TextBlock Text="  "/>
                        <flatstyle:Button x:Name="btnCreateStyle" Content="新建样式" Click="CreateStyleButtonClick"/>
                    </StackPanel>
                </StackPanel>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="8"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <flatstyle:ListView x:Name="lvw" SelectionMode="Single" ItemPreviewKeyDown="ListViewPreviewKeyDown" SelectionChanged="SelectedStyleChanged" SelectedItem="{Binding Styles.Selected}" ItemPreviewMouseRightButtonUp="ListItemPreviewMouseRightButtonUp" ItemsSource="{Binding Styles.Styles}" >
                        <flatstyle:ListView.View>
                            <GridView>
                                <GridViewColumn Header="显示">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding LayerVisible}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>

                                <GridViewColumn Header="标签">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding LabelVisible}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                
                                <GridViewColumn Header="标题" DisplayMemberBinding="{Binding Name}"/>
                                <GridViewColumn Header="类型" DisplayMemberBinding="{Binding TypeDescription}"/>
                                <GridViewColumn Header="图形数量" DisplayMemberBinding="{Binding FeatureCount}"/>
                            </GridView>
                        </flatstyle:ListView.View>
                    </flatstyle:ListView>
                </Grid>
                <Grid Grid.Row="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <!--<RowDefinition Height="4"/>
                        <RowDefinition Height="Auto"/>-->
                    </Grid.RowDefinitions>
                    <flatstyle:Button Content="导入" Click="ImportBtnClick"/>
                    <flatstyle:Button Content="导出" Click="ExportBtnClick" Grid.Column="2"/>
                    <flatstyle:Button Content="打开目录" Grid.Row="0" Grid.Column="4" Click="OpenFolderButtonClick"/>

                </Grid>

                <!--<Grid   Grid.Row="6" HorizontalAlignment="Center" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <flatstyle:Button x:Name="btnUndo" Command="{Binding ElementName=arcMap,Path=SketchEditor.UndoCommand}"  Tag="0" Padding="2,2,8,4" Style="{StaticResource undoRedoButtonStyle}">
                        <Viewbox Width="24">
                            <Path Fill="Black" Data="M426.053024 331.626933l0-169.619142-331.490833 300.725132 331.490833 300.789601L426.053024 581.63394c92.097558 0 376.594077 0 499.373425 281.257755l0-31.251771C925.426449 706.636932 802.629705 305.014832 426.053024 331.626933z"/>
                        </Viewbox>
                    </flatstyle:Button>
                    <flatstyle:Button x:Name="btnRedo" Command="{Binding ElementName=arcMap,Path=SketchEditor.RedoCommand}" Grid.Column="2" Tag="1" Padding="8,2,2,4" Style="{StaticResource undoRedoButtonStyle}">
                        <Viewbox Width="24" RenderTransformOrigin="0.5,0.5">
                            <Viewbox.RenderTransform>
                                <ScaleTransform ScaleX="-1"/>
                            </Viewbox.RenderTransform>
                            <Path Fill="Black" Data="M426.053024 331.626933l0-169.619142-331.490833 300.725132 331.490833 300.789601L426.053024 581.63394c92.097558 0 376.594077 0 499.373425 281.257755l0-31.251771C925.426449 706.636932 802.629705 305.014832 426.053024 331.626933z"/>
                        </Viewbox>
                    </flatstyle:Button>
                </Grid>-->
                <Grid   Grid.Row="100" x:Name="grdButtons">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="8"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!--<Grid  >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="8"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Margin="0,0,8,0">标签：</TextBlock>
                        <flatstyle:TextBox x:Name="txtLabel" Grid.Column="2" Text="{Binding ElementName=arcMap, Path=Drawing.Label}"/>
                    </Grid>-->

                    <splitbutton:SplitButton x:Name="splBtnPolyline" Grid.Row="2"  Text="多段线" Click="DrawButtonsClick">
                        <splitbutton:SplitButton.DropDownContextMenu>
                            <ContextMenu>
                                <MenuItem Header="自由线" Click="DrawButtonsClick"/>
                            </ContextMenu>
                        </splitbutton:SplitButton.DropDownContextMenu>
                    </splitbutton:SplitButton>
                    <splitbutton:SplitButton x:Name="splBtnPolygon"  Grid.Row="2" Text="多边形"  Click="DrawButtonsClick">
                        <splitbutton:SplitButton.DropDownContextMenu>
                            <ContextMenu>
                                <MenuItem Header="自由面" Click="DrawButtonsClick"/>
                                <MenuItem Header="圆" Click="DrawButtonsClick"/>
                                <MenuItem Header="椭圆" Click="DrawButtonsClick"/>
                                <MenuItem Header="矩形" Click="DrawButtonsClick"/>
                                <MenuItem Header="三角形" Click="DrawButtonsClick"/>
                                <MenuItem Header="箭头" Click="DrawButtonsClick"/>
                            </ContextMenu>
                        </splitbutton:SplitButton.DropDownContextMenu>
                    </splitbutton:SplitButton>

                    <splitbutton:SplitButton x:Name="splBtnPoint" Grid.Row="2" Text="点" Click="DrawButtonsClick"/>
                    <splitbutton:SplitButton x:Name="splBtnMultiPoint" Grid.Row="2" Text="多点" Click="DrawButtonsClick"/>

                    <Button x:Name="btnSelect" Grid.Row="2" Height="32" Width="32" FocusVisualStyle="{x:Null}" BorderThickness="0" Grid.Column="2"  Click="SelectToggleButtonClick">
                        <Button.Resources>
                            <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                            <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                            <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                            <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                            <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                            <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                            <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                            <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                            <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                            <Style  TargetType="{x:Type Button}">
                                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                                <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                <Setter Property="BorderThickness" Value="1"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                <Setter Property="Padding" Value="1"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border x:Name="border" CornerRadius="16" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                                <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>


                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsDefaulted" Value="true">
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                                    <Setter Property="Effect" TargetName="border" >
                                                        <Setter.Value>
                                                            <DropShadowEffect BlurRadius="8" ShadowDepth="0" Color="#ffc300" Opacity="0.6" RenderingBias="Quality"/>
                                                        </Setter.Value>
                                                    </Setter>

                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                                    <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Resources>
                        <Viewbox Height="26" Width="26">
                            <Path Fill="Black" Data="M829.888 739.392L547.84 457.28 706.112 364.8l-512-170.624L364.8 706.112l92.48-158.336 282.112 282.112z"/>
                        </Viewbox>
                    </Button>

                </Grid>

            </Grid>
        </win10style:ModernExpander>

        <progress:LoadingOverlay x:Name="loading" RingSize="0.1" Grid.ColumnSpan="100" Grid.RowSpan="100" />
    </Grid>
</Window>
